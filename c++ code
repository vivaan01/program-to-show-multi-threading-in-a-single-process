#include <iostream>
#include <thread>
#include <chrono> // For sleep_for
#include <vector>

void task(const std::string &name, int count) {
    for (int i = 1; i <= count; ++i) {
        std::cout << name << " is running iteration " << i << std::endl;
        // Simulate task execution time
        std::this_thread::sleep_for(std::chrono::milliseconds(500)); // Causes context switch
    }
}

int main() {
    // Creating and launching multiple threads
    std::thread thread1(task, "Thread 1", 3);
    std::thread thread2(task, "Thread 2", 3);
    std::thread thread3(task, "Thread 3", 3);

    // Joining threads with the main thread to wait for their completion
    thread1.join();
    thread2.join();
    thread3.join();

    std::cout << "All threads have completed execution." << std::endl;
    return 0;
}
